var AWS = require("aws-sdk");
AWS.config.update({
region: "us-west-2",
endpoint: "http://localhost:8000"
});


var dynamodb = new AWS.DynamoDB();
var docClient = new AWS.DynamoDB.DocumentClient();

function createTable (callback)
{
	var params = {
	TableName : "PantryTracker",
	KeySchema: [
		{ AttributeName: "USERID", KeyType: "HASH"}, //Partition key
		{ AttributeName:"foodKey", KeyType: "RANGE"}
		],
		AttributeDefinitions: [
		{ AttributeName: "USERID", AttributeType: "S" },
		{ AttributeName: "foodKey", AttributeType: "S" },
		],
		ProvisionedThroughput: {
		ReadCapacityUnits: 10,
		WriteCapacityUnits: 10
		}
	};

	dynamodb.createTable(params, (err,data)=>
	{
		if(!err)
		{
			console.log('Table successfully created');
			console.log("Created table. Table description JSON:",JSON.stringify(data, null, 2));
		}
		else
		{
			console.log('error in creating table'+err);
		}
	});	
}



function addFoodEntryDB(obj, callback)
{
	
	var params = {
		TableName:'PantryTracker',
		Item:obj
	};

	console.dir(JSON.stringify(params,null));
	if(docClient)
	{
		docClient.put(params, callback);
	}

	console.log('Called here');
}

function checkTableDB(obj, callback)
{
	var param = {TableName: obj.TableName};

	dynamodb.listTables(param, callback);
	console.log('checking if table is present');
}


function fetchfromDB(obj,type,callback)
{
	//console.log(obj.date);
	//Query all
	if (type == 1)
	{
		var params = {
			TableName:obj.TableName,
			KeyConditionExpression:"USERID=:userid",
			FilterExpression: "expDate <= :ty",
			ExpressionAttributeValues: {
				":userid":obj.USERID,
				":ty": obj.expDate
			}
		};
		//console.log(JSON.stringify(params,null,2));
		
	} //type1
	// Query range
	else if (type == 2)
	{
		var params = {
			TableName:obj.TableName,
			ProjectionExpression:"expDate",
			KeyConditionExpression:"USERID=:userid",
			ExpressionAttributeValues: {
				":userid":obj.USERID,
				":date":obj.date
			}
		};
	}//type 2

	docClient.query(params,callback);
}



//createTable();

module.exports.addFoodEntryDB = addFoodEntryDB;
module.exports.checkTablePresentDB=checkTableDB;
module.exports.fetchfromDB=fetchfromDB;